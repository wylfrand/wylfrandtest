# 
# Generated by
# 
#      _____ _          __  __      _     _
#     / ____| |        / _|/ _|    | |   | |
#    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
#     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
#     ____) |   < (_| | | | || (_) | | (_| |  __/ |
#    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
#
# The code generator that works in many programming languages
#
#			https://www.skaffolder.com
#
#
# You can generate the code from the command-line
#       https://npmjs.com/package/skaffolder-cli
#
#       npm install -g skaffodler-cli
#
#   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #
#
# To remove this comment please upgrade your plan here: 
#      https://app.skaffolder.com/#!/upgrade
#
# Or get up to 70% discount sharing your unique link:
#       https://app.skaffolder.com/#!/register?friend=5e68a97119703c50bc67c2a3
#
# You will get 10% discount for each one of your friends
# 
#

# Docker-compose version
version: '3'

# Define the services/containers to be run
services:
      
  # Database
  database:
    # image to build container from
    image: mysql:5.7.24 
    ports:
      - "27018:27017"
    networks:
      - backend_network
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
    volumes:
       - .//script/schemaDb_wylfrandtest_db.sql:/docker-entrypoint-initdb.d/schemaDb_wylfrandtest_db.sql
  
  # Backend
  backend: 
    # directory of Dockerfile
    build: ./
    ports:
      - "3000:3000"
    # link this service to database service
    links:
      - database 
    environment:
      - DB_URL=jdbc:mysql://database:3306/wylfrandtest_db
      - SERVER_PORT=3000
    networks:
      - backend_network
    depends_on:
      - database
      
  # Frontend
  frontend:
    build: ./src/client
    ports:
      - "2000:2000"
    networks:
      - frontend_network

  # Proxy server
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - frontend_network
      - backend_network

networks:
  frontend_network:
  backend_network: